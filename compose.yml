services:
  app-service:
    image: ddresser05/app-service # specify name of image on Docker Hub
    restart: "always" # automatically restart container when server crashes
    environment: # set up environment variables
      AUTH_SERVICE_IP: ${AUTH_SERVICE_IP:-localhost} # Use localhost as the default value
    ports:
      - "8000:8000" # expose port 8000 so that applications outside the container can connect to it 
    depends_on: # only run app-service after auth-service has started
      auth-service:
        condition: service_started
  auth-service:
    image: ddresser05/auth-service
    restart: "always" # automatically restart container when server crashes
    ports:
      - "3000:3000" # expose port 3000 so that applications outside the container can connect to it 
    networks:
      - app-network
  webserver:
    image: nginx:latest # use the latest version of nginx
    restart: "always" # automatically restart container when server crashes
    ports:
      - "80:80" # expose port 80 so that applications outside the container can connect to it 
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf/nginx.conf:/etc/nginx/nginx.conf # mount local nginx configuration file into the container
      - certbot-etc:/etc/letsencrypt # mount local certbot configuration directory into the container
      - certbot-var:/var/lib/letsencrypt # mount local certbot data directory into the container
    depends_on: # only run webserver after app-service and auth-service have started
      app-service:
        condition: service_started
      auth-service:
        condition: service_started 
  certbot:
    image: certbot/certbot # use the official certbot image
    restart: "always" # automatically restart container when server crashes
    volumes:
      - certbot-etc:/etc/letsencrypt # mount local certbot configuration directory into the container
      - certbot-var:/var/lib/letsencrypt # mount local certbot data directory into the container
      - web-root:/var/www/html # mount local web root directory into the container
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --staging -d lgr.ddrcode.me -d www.lgr.ddrcode.me
  volumes:
    certbot-etc:
    certbot-var:
    webroot:
      driver: local
      driver_opts:
        type: none
        device: /home/ddresser05/auth-service/views/
        o: bind
  networks:
    app-network:
      driver: bridge